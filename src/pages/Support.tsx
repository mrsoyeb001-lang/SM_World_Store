// src/pages/SupportPage.tsx
import React, { useState, useEffect, useRef } from "react";
import {
  PhoneCall,
  Mail,
  Bot,
  UserRound,
  Loader2,
  SendHorizonal,
} from "lucide-react";
import { SiWhatsapp, SiTelegram, SiFacebook, SiTiktok } from "react-icons/si";

import logo from "@/assets/logo.png";

type ChatMessage = {
  id: string;
  role: "user" | "assistant" | "system";
  content: string;
  ts: number;
};

const QUICK_SUGGESTIONS = [
  "ржЕрж░рзНржбрж╛рж░ ржХрж┐ржнрж╛ржмрзЗ ржХрж░ржмрзЛ?",
  "ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ ржХрждржжрж┐ржирзЗ рж╣ржмрзЗ?",
  "рж░рж┐ржЯрж╛рж░рзНржи ржкрж▓рж┐рж╕рж┐ ржЬрж╛ржирждрзЗ ржЪрж╛ржЗ",
  "ржкрзЗржорзЗржирзНржЯ ржорзЗржержб ржХрзА ржХрзА?",
  "ржЕрж░рзНржбрж╛рж░ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░ржмрзЛ ржХрзАржнрж╛ржмрзЗ?",
  "ржУрзЯрж╛рж░рзЗржирзНржЯрж┐/ржЧрзНржпрж╛рж░рж╛ржирзНржЯрж┐ ржмрж┐рж╖рзЯрзЗ ржЬрж╛ржирждрзЗ ржЪрж╛ржЗ",
  "ржХрж╛рж╕рзНржЯржорж╛рж░ ржХрзЗрзЯрж╛рж░ ржирж╛ржорзНржмрж╛рж░ ржЪрж╛ржЗ",
  "ржЖржкржирж╛ржжрзЗрж░ ржлрзЗрж╕ржмрзБржХ ржкрзЗржЬрзЗрж░ рж▓рж┐ржВржХ ржжрж┐ржи",
  "ржЯрж┐ржХржЯржХ рж▓рж┐ржВржХ ржжрж┐ржи",
  "ржЖржкржирж╛ржжрзЗрж░ Whatsapp ржирж╛ржорзНржмрж╛рж░ ржХрзА?",
];

const HANDOFF_LINKS = {
  tel: "tel:+8801624712851",
  mail: "mailto:smworldstoreofficial@gmail.com",
  whatsapp: "https://wa.me/+8801624712851",
  telegram: "https://t.me/+ylw3CCVehHQ1NWQ9",
  facebook: "https://www.facebook.com/profile.php?id=61579242700749",
  tiktok: "https://www.tiktok.com/@smworldstore",
};

// тЬЕ Rule-based Answer
function ruleBasedAnswer(q: string): string {
  const s = q.toLowerCase();

  if (/ржЕрж░рзНржбрж╛рж░|order/.test(s)) {
    return `тЬЕ ржЕрж░рзНржбрж╛рж░ ржХрж░рждрзЗ ржкрзНрж░рзЛржбрж╛ржХрзНржЯрзЗ ржпрж╛ржи тЖТ тАЬAdd to CartтАЭ тЖТ тАЬCheckoutтАЭред ржарж┐ржХрж╛ржирж╛ ржУ ржкрзЗржорзЗржирзНржЯ ржжрж┐рзЯрзЗ ржЕрж░рзНржбрж╛рж░ ржХржиржлрж╛рж░рзНржо ржХрж░рзБржиред`;
  }
  if (/ржЯрзНрж░рзНржпрж╛ржХ|track/.test(s)) {
    return `ЁЯУж ржЕрж░рзНржбрж╛рж░ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рждрзЗ Dashboard тЖТ тАЬMy OrdersтАЭ ржП ржпрж╛ржиред`;
  }
  if (/ржкрзЗржорзЗржирзНржЯ|payment|bkash|ржиржЧржж|rocket/.test(s)) {
    return `ЁЯТ│ ржЖржорж░рж╛ ржмрж┐ржХрж╛рж╢/ржиржЧржж/рж░ржХрзЗржЯ, ржХрж╛рж░рзНржб ржкрзЗржорзЗржирзНржЯ ржПржмржВ ржХрзНржпрж╛рж╢ ржЕржи ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ ржЧрзНрж░рж╣ржг ржХрж░рж┐ред`;
  }
  if (/ржбрзЗрж▓рж┐ржнрж╛рж░рж┐|shipping/.test(s)) {
    return `ЁЯЪЪ ржврж╛ржХрж╛рж░ ржнрзЗрждрж░рзЗ рзирзктАУрзкрзо ржШржгрзНржЯрж╛, ржврж╛ржХрж╛рж░ ржмрж╛ржЗрж░рзЗ рзйтАУрзл ржХрж░рзНржоржжрж┐ржмрж╕ рж▓рж╛ржЧрзЗред`;
  }
  if (/рж░рж┐ржЯрж╛рж░рзНржи|return/.test(s)) {
    return `тЖйя╕П рзн ржжрж┐ржирзЗрж░ ржоржзрзНржпрзЗ рж╢рж░рзНрждрж╕рж╛ржкрзЗржХрзНрж╖рзЗ рж░рж┐ржЯрж╛рж░рзНржи/ржПржХрзНрж╕ржЪрзЗржЮрзНржЬ ржХрж░рж╛ ржпрж╛рзЯред`;
  }
  if (/ржУрзЯрж╛рж░рзЗржирзНржЯрж┐|ржЧрзНржпрж╛рж░рж╛ржирзНржЯрж┐|warranty/.test(s)) {
    return `ЁЯЫбя╕П ржмрж┐ржнрж┐ржирзНржи ржХрзНржпрж╛ржЯрзЗржЧрж░рж┐рждрзЗ рзм ржорж╛рж╕ ржерзЗржХрзЗ рзз ржмржЫрж░рзЗрж░ ржУрзЯрж╛рж░рзЗржирзНржЯрж┐ ржерж╛ржХрзЗред`;
  }
  if (/ржлрзЗрж╕ржмрзБржХ|facebook/.test(s)) {
    return `ЁЯУШ ржЖржорж╛ржжрзЗрж░ ржЕржлрж┐рж╕рж┐рзЯрж╛рж▓ ржлрзЗрж╕ржмрзБржХ ржкрзЗржЬ: ${HANDOFF_LINKS.facebook}`;
  }
  if (/ржЯрж┐ржХржЯржХ|tiktok/.test(s)) {
    return `ЁЯО╡ ржЖржорж╛ржжрзЗрж░ ржЕржлрж┐рж╕рж┐рзЯрж╛рж▓ TikTok: ${HANDOFF_LINKS.tiktok}`;
  }
  if (/whatsapp|ржУржпрж╝рж╛ржЯрж╕ржЕрзНржпрж╛ржк/.test(s)) {
    return `ЁЯЯв ржЖржорж╛ржжрзЗрж░ WhatsApp: ${HANDOFF_LINKS.whatsapp}`;
  }
  if (/ржЯрзЗрж▓рж┐ржЧрзНрж░рж╛ржо|telegram/.test(s)) {
    return `ЁЯУи ржЖржорж╛ржжрзЗрж░ Telegram Group: ${HANDOFF_LINKS.telegram}`;
  }
  if (/ржХрж╛рж╕рзНржЯржорж╛рж░ ржХрзЗрзЯрж╛рж░|customer care|phone/.test(s)) {
    return `ЁЯУЮ ржХрж╛рж╕рзНржЯржорж╛рж░ ржХрзЗрзЯрж╛рж░: ${HANDOFF_LINKS.tel}`;
  }

  return "ЁЯдФ ржЖржорж┐ ржмрзБржЭрзЗржЫрж┐ред ржПржХржЯрзБ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржмрж▓ржмрзЗржи? ржЪрж╛ржЗрж▓рзЗ WhatsApp, Telegram, Facebook ржмрж╛ рж▓рж╛ржЗржн ржЪрзНржпрж╛ржЯрзЗржУ ржпрзЗрждрзЗ ржкрж╛рж░рзЗржиред";
}

export default function SupportPage() {
  const [input, setInput] = useState("");
  const [loading, setLoading] = useState(false);
  const [messages, setMessages] = useState<ChatMessage[]>(() => [
    {
      id: crypto.randomUUID(),
      role: "assistant",
      content:
        "ЁЯСЛ рж╣рзНржпрж╛рж▓рзЛ! ржЖржорж┐ **SM World Store AI рж╕рж╣ржХрж╛рж░рзА**ред ржЕрж░рзНржбрж╛рж░, ржбрзЗрж▓рж┐ржнрж╛рж░рж┐, рж░рж┐ржЯрж╛рж░рзНржи, ржкрзЗржорзЗржирзНржЯ, ржЯрзНрж░рзНржпрж╛ржХрж┐ржВтАФржпрзЗржХрзЛржи ржкрзНрж░рж╢рзНржи ржХрж░рзБржиред",
      ts: Date.now(),
    },
  ]);

  const scrollRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    if (scrollRef.current) {
      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;
    }
  }, [messages]);

  const sendMessage = async (text?: string) => {
    const content = (text ?? input).trim();
    if (!content) return;

    const userMsg: ChatMessage = {
      id: crypto.randomUUID(),
      role: "user",
      content,
      ts: Date.now(),
    };
    setMessages((m) => [...m, userMsg]);
    setInput("");
    setLoading(true);

    try {
      const reply = ruleBasedAnswer(content);
      const botMsg: ChatMessage = {
        id: crypto.randomUUID(),
        role: "assistant",
        content: reply,
        ts: Date.now(),
      };
      setMessages((m) => [...m, botMsg]);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-100 to-white py-10 px-4">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="flex flex-col items-center mb-8">
          <img src={logo} alt="SM World Store" className="w-20 h-20 mb-3" />
          <h1 className="text-4xl font-extrabold text-gray-800">
            SM World Store Support
          </h1>
          <p className="text-center text-gray-600 mt-2">
            ржпрзЗржХрзЛржирзЛ ржкрзНрж░рж╢рзНржи, рж╕ржорж╕рзНржпрж╛ ржмрж╛ рж╕рж╛рж╣рж╛ржпрзНржпрзЗрж░ ржЬржирзНржп ржЖржорж╛ржжрзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи
          </p>
        </div>

        {/* Quick Support Options */}
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-5 mb-10">
          <a
            href={HANDOFF_LINKS.tel}
            className="group rounded-2xl border p-6 flex flex-col items-center shadow hover:shadow-lg bg-white transition"
          >
            <PhoneCall className="w-8 h-8 text-blue-600" />
            <span className="mt-2 text-sm font-semibold">ржХрж▓</span>
          </a>
          <a
            href={HANDOFF_LINKS.mail}
            className="group rounded-2xl border p-6 flex flex-col items-center shadow hover:shadow-lg bg-white transition"
          >
            <Mail className="w-8 h-8 text-red-600" />
            <span className="mt-2 text-sm font-semibold">ржЗржорзЗржЗрж▓</span>
          </a>
          <a
            href={HANDOFF_LINKS.whatsapp}
            target="_blank"
            rel="noreferrer"
            className="group rounded-2xl border p-6 flex flex-col items-center shadow hover:shadow-lg bg-white transition"
          >
            <SiWhatsapp className="w-8 h-8 text-green-600" />
            <span className="mt-2 text-sm font-semibold">WhatsApp</span>
          </a>
          <a
            href={HANDOFF_LINKS.telegram}
            target="_blank"
            rel="noreferrer"
            className="group rounded-2xl border p-6 flex flex-col items-center shadow hover:shadow-lg bg-white transition"
          >
            <SiTelegram className="w-8 h-8 text-sky-500" />
            <span className="mt-2 text-sm font-semibold">Telegram</span>
          </a>
          <a
            href={HANDOFF_LINKS.facebook}
            target="_blank"
            rel="noreferrer"
            className="group rounded-2xl border p-6 flex flex-col items-center shadow hover:shadow-lg bg-white transition"
          >
            <SiFacebook className="w-8 h-8 text-blue-700" />
            <span className="mt-2 text-sm font-semibold">Facebook</span>
          </a>
          <a
            href={HANDOFF_LINKS.tiktok}
            target="_blank"
            rel="noreferrer"
            className="group rounded-2xl border p-6 flex flex-col items-center shadow hover:shadow-lg bg-white transition"
          >
            <SiTiktok className="w-8 h-8 text-black" />
            <span className="mt-2 text-sm font-semibold">TikTok</span>
          </a>
        </div>

        {/* AI Assistant Chat Box */}
        <div className="rounded-2xl border bg-white shadow-xl overflow-hidden">
          {/* Header */}
          <div className="flex items-center gap-3 px-5 py-4 border-b bg-gradient-to-r from-blue-600 to-indigo-600 text-white">
            <Bot className="w-6 h-6" />
            <div>
              <p className="font-semibold leading-none">
                AI рж╕рж╣ржХрж╛рж░рзА (SM World Store)
              </p>
              <p className="text-xs opacity-90">рзирзк/рзн рж╕рж╣рж╛рзЯрждрж╛</p>
            </div>
          </div>

          {/* Messages */}
          <div
            ref={scrollRef}
            className="h-96 overflow-y-auto p-4 space-y-3"
          >
            {messages.map((m) => (
              <div
                key={m.id}
                className={`flex items-start gap-2 ${
                  m.role === "user" ? "justify-end" : "justify-start"
                }`}
              >
                {m.role === "assistant" && (
                  <div className="shrink-0 mt-0.5 rounded-full border p-1 bg-blue-50">
                    <Bot className="w-4 h-4 text-blue-600" />
                  </div>
                )}
                <div
                  className={`rounded-2xl px-4 py-2 text-sm max-w-[80%] shadow-sm ${
                    m.role === "user"
                      ? "bg-blue-600 text-white"
                      : "bg-gray-100 text-gray-800"
                  }`}
                >
                  {m.content}
                </div>
                {m.role === "user" && (
                  <div className="shrink-0 mt-0.5 rounded-full border p-1 bg-gray-50">
                    <UserRound className="w-4 h-4 text-gray-600" />
                  </div>
                )}
              </div>
            ))}
            {loading && (
              <div className="flex items-center gap-2 text-gray-500 text-sm">
                <Loader2 className="w-4 h-4 animate-spin" />
                ржЯрж╛ржЗржк ржХрж░рж╛ рж╣ржЪрзНржЫрзЗтАж
              </div>
            )}
          </div>

          {/* Quick Suggestions */}
          <div className="flex gap-2 overflow-x-auto px-4 pb-2 border-t bg-gray-50">
            {QUICK_SUGGESTIONS.map((q) => (
              <button
                key={q}
                onClick={() => sendMessage(q)}
                className="shrink-0 rounded-full border px-3 py-1 text-xs hover:bg-gray-200"
              >
                {q}
              </button>
            ))}
          </div>

          {/* Input */}
          <form
            onSubmit={(e) => {
              e.preventDefault();
              sendMessage();
            }}
            className="flex items-center gap-2 border-t p-3"
          >
            <input
              value={input}
              onChange={(e) => setInput(e.target.value)}
              placeholder="ржЖржкржирж╛рж░ ржкрзНрж░рж╢рзНржи рж▓рж┐ржЦрзБржитАж"
              className="flex-1 rounded-xl border px-3 py-2 outline-none focus:ring focus:ring-blue-300"
            />
            <button
              type="submit"
              disabled={loading || !input.trim()}
              className="inline-flex items-center gap-2 rounded-xl bg-blue-600 text-white px-3 py-2 disabled:opacity-50"
            >
              <SendHorizonal className="w-4 h-4" />
              ржкрж╛ржарж╛ржи
            </button>
          </form>
        </div>
      </div>
    </div>
  );
}
