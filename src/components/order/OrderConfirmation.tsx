import { useEffect, useState } from 'react';
import { useLocation, Link, useNavigate } from 'react-router-dom';
import { useAuth } from '@/hooks/useAuth';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { CheckCircle, Package, Truck, Home, Clock, MapPin, Phone, Mail, CreditCard, FileText, Calendar, User, Gift, HeadphonesIcon, Smartphone } from 'lucide-react';
import { Badge } from '@/components/ui/badge';
import { Separator } from '@/components/ui/separator';
import { Progress } from '@/components/ui/progress';
import { supabase } from '@/integrations/supabase/client';
import { useToast } from '@/hooks/use-toast';

interface OrderItem {
  id: string;
  product_id: string;
  quantity: number;
  price: number;
  products: {
    name: string;
    image_url: string;
  };
}

interface ShippingAddress {
  full_name: string;
  phone: string;
  address: string;
  city: string;
  area?: string;
  sender_number?: string;
  transaction_id?: string;
}

interface OrderDetails {
  id: string;
  created_at: string;
  total_amount: number;
  shipping_cost: number;
  discount_amount: number;
  payment_method: string;
  status: string;
  notes?: string;
  promo_code?: string;
  order_items: OrderItem[];
  shipping_address: ShippingAddress;
}

export function OrderConfirmation() {
  const { user } = useAuth();
  const location = useLocation();
  const navigate = useNavigate();
  const { toast } = useToast();
  const [orderDetails, setOrderDetails] = useState<OrderDetails | null>(null);
  const [loading, setLoading] = useState(true);
  const [orderProgress, setOrderProgress] = useState(25);

  // Get order data from navigation state or fetch from API
  useEffect(() => {
    const fetchOrderDetails = async () => {
      try {
        setLoading(true);
        
        // If we have state from navigation, use it to fetch order details
        if (location.state?.orderId) {
          const { data: order, error } = await supabase
            .from('orders')
            .select(`
              *,
              order_items (
                *,
                products (
                  name,
                  image_url
                )
              )
            `)
            .eq('id', location.state.orderId)
            .single();

          if (error) {
            console.error('Error fetching order:', error);
            toast({
              title: "‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø",
              description: "‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá",
              variant: "destructive"
            });
          } else {
            setOrderDetails(order as OrderDetails);
            
            // Set progress based on status
            if (order.status === 'pending') setOrderProgress(25);
            else if (order.status === 'confirmed') setOrderProgress(50);
            else if (order.status === 'shipped') setOrderProgress(75);
            else if (order.status === 'delivered') setOrderProgress(100);
          }
        } else {
          // If no state, try to get the latest order for the user
          const { data: orders, error } = await supabase
            .from('orders')
            .select(`
              *,
              order_items (
                *,
                products (
                  name,
                  image_url
                )
              )
            `)
            .eq('user_id', user?.id)
            .order('created_at', { ascending: false })
            .limit(1);

          if (error) {
            console.error('Error fetching latest order:', error);
          } else if (orders && orders.length > 0) {
            setOrderDetails(orders[0] as OrderDetails);
            
            // Set progress based on status
            if (orders[0].status === 'pending') setOrderProgress(25);
            else if (orders[0].status === 'confirmed') setOrderProgress(50);
            else if (orders[0].status === 'shipped') setOrderProgress(75);
            else if (orders[0].status === 'delivered') setOrderProgress(100);
          }
        }
      } catch (error) {
        console.error('Error in fetchOrderDetails:', error);
        toast({
          title: "‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø",
          description: "‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá",
          variant: "destructive"
        });
      } finally {
        setLoading(false);
      }
    };

    fetchOrderDetails();
  }, [location.state, user, toast]);

  if (loading) {
    return (
      <div className="container mx-auto px-4 py-8 max-w-4xl">
        <Card className="bg-blue-50 border-blue-200">
          <CardHeader className="text-center pb-4">
            <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4 animate-pulse">
              <Package className="w-8 h-8 text-blue-600" />
            </div>
            <CardTitle className="text-2xl text-blue-800">‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá...</CardTitle>
            <p className="text-blue-600">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§</p>
          </CardHeader>
        </Card>
      </div>
    );
  }

  if (!orderDetails) {
    return (
      <div className="container mx-auto px-4 py-8 max-w-4xl">
        <Card className="bg-yellow-50 border-yellow-200">
          <CardHeader className="text-center pb-4">
            <div className="w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <Clock className="w-8 h-8 text-yellow-600" />
            </div>
            <CardTitle className="text-2xl text-yellow-800">‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø</CardTitle>
            <p className="text-yellow-600">‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶™‡¶æ‡¶á‡¶®‡¶ø‡•§</p>
            <Button asChild className="mt-4">
              <Link to="/user-dashboard">‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®</Link>
            </Button>
          </CardHeader>
        </Card>
      </div>
    );
  }

  const getPaymentMethodText = (method: string) => {
    switch (method) {
      case 'cash_on_delivery':
        return '‡¶ï‡ßç‡¶Ø‡¶æ‡¶∂ ‡¶Ö‡¶® ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø';
      case 'bkash':
        return '‡¶¨‡¶ø‡¶ï‡¶æ‡¶∂';
      case 'rocket':
        return '‡¶∞‡¶ï‡ßá‡¶ü';
      case 'nagad':
        return '‡¶®‡¶ó‡¶¶';
      default:
        return method;
    }
  };

  const getStatusText = (status: string) => {
    switch (status) {
      case 'pending':
        return '‡¶¨‡¶ø‡¶ö‡¶æ‡¶∞‡¶æ‡¶ß‡ßÄ‡¶®';
      case 'confirmed':
        return '‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§‡¶ï‡ßÉ‡¶§';
      case 'shipped':
        return '‡¶∂‡¶ø‡¶™ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá';
      case 'delivered':
        return '‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶®';
      default:
        return status;
    }
  };

  const getEstimatedDeliveryDate = () => {
    const orderDate = new Date(orderDetails.created_at);
    orderDate.setDate(orderDate.getDate() + 3); // Add 3 days for delivery
    return orderDate.toLocaleDateString('bn-BD', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  };

  return (
    <div className="container mx-auto px-4 py-8 max-w-4xl">
      <Card className="bg-green-50 border-green-200 shadow-lg">
        <CardHeader className="text-center pb-4">
          <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <CheckCircle className="w-8 h-8 text-green-600" />
          </div>
          <CardTitle className="text-2xl text-green-800">‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶´‡¶≤! üéâ</CardTitle>
          <p className="text-green-600">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶ó‡ßç‡¶∞‡¶π‡¶£ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§</p>
          <Badge variant="outline" className="mt-2 bg-white text-green-800 border-green-300">
            ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞: #{orderDetails.id.slice(0, 8).toUpperCase()}
          </Badge>
        </CardHeader>
        
        <CardContent className="space-y-6">
          {/* Order Progress */}
          <div className="bg-white p-4 rounded-lg border shadow-sm">
            <h3 className="font-semibold text-lg mb-4 flex items-center">
              <Clock className="w-5 h-5 mr-2 text-blue-500" />
              ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏
            </h3>
            
            <div className="mb-4">
              <div className="flex justify-between mb-1">
                <span className="text-sm font-medium text-gray-700">‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶ó‡ßç‡¶∞‡ßá‡¶∏</span>
                <span className="text-sm font-medium text-green-600">{orderProgress}% ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£</span>
              </div>
              <Progress value={orderProgress} className="h-2" />
            </div>
            
            <div className="grid grid-cols-4 gap-2 text-xs text-center mt-4">
              <div className={`flex flex-col items-center ${orderProgress >= 25 ? 'text-green-600' : 'text-gray-400'}`}>
                <div className={`w-8 h-8 rounded-full flex items-center justify-center ${orderProgress >= 25 ? 'bg-green-100' : 'bg-gray-100'}`}>
                  <FileText className="w-4 h-4" />
                </div>
                <span className="mt-1">‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶™‡ßç‡¶≤‡ßá‡¶∏‡¶°</span>
              </div>
              <div className={`flex flex-col items-center ${orderProgress >= 50 ? 'text-green-600' : 'text-gray-400'}`}>
                <div className={`w-8 h-8 rounded-full flex items-center justify-center ${orderProgress >= 50 ? 'bg-green-100' : 'bg-gray-100'}`}>
                  <CheckCircle className="w-4 h-4" />
                </div>
                <span className="mt-1">‡¶ï‡¶®‡¶´‡¶æ‡¶∞‡ßç‡¶Æ‡¶°</span>
              </div>
              <div className={`flex flex-col items-center ${orderProgress >= 75 ? 'text-green-600' : 'text-gray-400'}`}>
                <div className={`w-8 h-8 rounded-full flex items-center justify-center ${orderProgress >= 75 ? 'bg-green-100' : 'bg-gray-100'}`}>
                  <Truck className="w-4 h-4" />
                </div>
                <span className="mt-1">‡¶∂‡¶ø‡¶™‡¶°</span>
              </div>
              <div className={`flex flex-col items-center ${orderProgress >= 100 ? 'text-green-600' : 'text-gray-400'}`}>
                <div className={`w-8 h-8 rounded-full flex items-center justify-center ${orderProgress >= 100 ? 'bg-green-100' : 'bg-gray-100'}`}>
                  <Package className="w-4 h-4" />
                </div>
                <span className="mt-1">‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡ßç‡¶°</span>
              </div>
            </div>
          </div>

          {/* Order Summary */}
          <div className="bg-white p-4 rounded-lg border shadow-sm">
            <h3 className="font-semibold text-lg mb-4 flex items-center">
              <FileText className="w-5 h-5 mr-2 text-blue-500" />
              ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶∞‡¶æ‡¶Ç‡¶∂
            </h3>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div>
                <p className="text-sm text-gray-500">‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ</p>
                <p className="font-medium">{new Date(orderDetails.created_at).toLocaleDateString('bn-BD')}</p>
              </div>
              <div>
                <p className="text-sm text-gray-500">‡¶Æ‡ßã‡¶ü ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£</p>
                <p className="font-medium text-green-600">‡ß≥{orderDetails.total_amount.toLocaleString('bn-BD')}</p>
              </div>
              <div>
                <p className="text-sm text-gray-500">‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø</p>
                <p className="font-medium">{getPaymentMethodText(orderDetails.payment_method)}</p>
              </div>
              <div>
                <p className="text-sm text-gray-500">‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏</p>
                <Badge 
                  className={
                    orderDetails.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :
                    orderDetails.status === 'confirmed' ? 'bg-blue-100 text-blue-800' :
                    orderDetails.status === 'shipped' ? 'bg-purple-100 text-purple-800' :
                    'bg-green-100 text-green-800'
                  }
                >
                  {getStatusText(orderDetails.status)}
                </Badge>
              </div>
            </div>

            {orderDetails.payment_method !== 'cash_on_delivery' && orderDetails.shipping_address.transaction_id && (
              <div className="bg-blue-50 p-3 rounded border border-blue-100 mt-3">
                <p className="text-sm text-blue-800">
                  <span className="font-medium">‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡¶ú‡ßá‡¶ï‡¶∂‡¶® ‡¶Ü‡¶á‡¶°‡¶ø:</span> {orderDetails.shipping_address.transaction_id}
                </p>
                {orderDetails.shipping_address.sender_number && (
                  <p className="text-sm text-blue-800 mt-1">
                    <span className="font-medium">‡¶∏‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞:</span> {orderDetails.shipping_address.sender_number}
                  </p>
                )}
              </div>
            )}
          </div>

          {/* Order Items */}
          <div className="bg-white p-4 rounded-lg border shadow-sm">
            <h3 className="font-semibold text-lg mb-4 flex items-center">
              <Package className="w-5 h-5 mr-2 text-purple-500" />
              ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞‡¶ï‡ßÉ‡¶§ ‡¶™‡¶£‡ßç‡¶Ø
            </h3>
            
            <div className="space-y-4">
              {orderDetails.order_items.map((item, index) => (
                <div key={index} className="flex items-center border-b pb-4 last:border-b-0 last:pb-0">
                  <div className="w-16 h-16 overflow-hidden rounded-lg mr-4 bg-gray-100 flex items-center justify-center">
                    {item.products.image_url ? (
                      <img 
                        src={item.products.image_url} 
                        alt={item.products.name}
                        className="w-full h-full object-cover"
                      />
                    ) : (
                      <Package className="w-8 h-8 text-gray-400" />
                    )}
                  </div>
                  <div className="flex-1">
                    <h4 className="font-medium">{item.products.name}</h4>
                    <div className="flex justify-between items-center mt-1">
                      <div className="text-sm text-gray-600">‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£: {item.quantity}</div>
                      <div className="font-medium">‡ß≥{(item.price * item.quantity).toLocaleString('bn-BD')}</div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
            
            <Separator className="my-4" />
            
            <div className="space-y-2">
              <div className="flex justify-between">
                <span className="text-gray-600">‡¶â‡¶™-‡¶Æ‡ßã‡¶ü:</span>
                <span className="font-medium">‡ß≥{(orderDetails.total_amount - orderDetails.shipping_cost + orderDetails.discount_amount).toLocaleString('bn-BD')}</span>
              </div>
              
              {orderDetails.discount_amount > 0 && (
                <div className="flex justify-between text-green-600">
                  <span>‡¶õ‡¶æ‡¶°‡¶º {orderDetails.promo_code && `(${orderDetails.promo_code})`}:</span>
                  <span>-‡ß≥{orderDetails.discount_amount.toLocaleString('bn-BD')}</span>
                </div>
              )}
              
              <div className="flex justify-between">
                <span className="text-gray-600">‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶ö‡¶æ‡¶∞‡ßç‡¶ú:</span>
                <span className="font-medium">‡ß≥{orderDetails.shipping_cost.toLocaleString('bn-BD')}</span>
              </div>
              
              <Separator className="my-2" />
              
              <div className="flex justify-between text-lg font-bold mt-2">
                <span>‡¶Æ‡ßã‡¶ü:</span>
                <span className="text-green-600">‡ß≥{orderDetails.total_amount.toLocaleString('bn-BD')}</span>
              </div>
            </div>
          </div>

          {/* Shipping Information */}
          <div className="bg-white p-4 rounded-lg border shadow-sm">
            <h3 className="font-semibold text-lg mb-4 flex items-center">
              <MapPin className="w-5 h-5 mr-2 text-red-500" />
              ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶§‡¶•‡ßç‡¶Ø
            </h3>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <p className="text-sm text-gray-500 flex items-center">
                  <User className="w-4 h-4 mr-1" />
                  ‡¶ó‡ßç‡¶∞‡¶æ‡¶π‡¶ï‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ
                </p>
                <p className="font-medium">{orderDetails.shipping_address.full_name}</p>
              </div>
              <div>
                <p className="text-sm text-gray-500 flex items-center">
                  <Phone className="w-4 h-4 mr-1" />
                  ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞
                </p>
                <p className="font-medium">{orderDetails.shipping_address.phone}</p>
              </div>
              <div className="md:col-span-2">
                <p className="text-sm text-gray-500">‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ</p>
                <p className="font-medium">{orderDetails.shipping_address.address}, {orderDetails.shipping_address.city}</p>
              </div>
              {orderDetails.shipping_address.area && (
                <div className="md:col-span-2">
                  <p className="text-sm text-gray-500">‡¶è‡¶≤‡¶æ‡¶ï‡¶æ</p>
                  <p className="font-medium">{orderDetails.shipping_address.area}</p>
                </div>
              )}
            </div>
          </div>

          {/* Delivery Information */}
          <div className="bg-blue-50 p-4 rounded-lg border border-blue-100">
            <h3 className="font-semibold text-lg mb-4 flex items-center text-blue-800">
              <Truck className="w-5 h-5 mr-2" />
              ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶§‡¶•‡ßç‡¶Ø
            </h3>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <p className="text-sm text-blue-700">‡¶Ü‡¶®‡ßÅ‡¶Æ‡¶æ‡¶®‡¶ø‡¶ï ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ</p>
                <p className="font-medium text-blue-900 flex items-center">
                  <Calendar className="w-4 h-4 mr-1" />
                  {getEstimatedDeliveryDate()}
                </p>
              </div>
              <div>
                <p className="text-sm text-blue-700">‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶™‡¶æ‡¶∞‡ßç‡¶ü‡¶®‡¶æ‡¶∞</p>
                <p className="font-medium text-blue-900">‡¶∏‡ßÅ‡¶®‡ßç‡¶¶‡¶∞‡¶¨‡¶® ‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶ø‡¶∏</p>
              </div>
            </div>
            
            <div className="mt-4 p-3 bg-white rounded border">
              <h4 className="font-medium text-blue-900 mb-2">‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡ßá‡¶∂‡¶æ‡¶¨‡¶≤‡ßÄ:</h4>
              <ul className="text-sm text-blue-700 space-y-1">
                <li>‚Ä¢ ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶´‡ßã‡¶®‡¶ü‡¶ø ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶∞‡¶æ‡¶ñ‡ßÅ‡¶®</li>
                <li>‚Ä¢ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶®‡¶´‡¶æ‡¶∞‡ßç‡¶Æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶•‡ßá‡¶ï‡ßá ‡ß®‡ß™-‡ß™‡ßÆ ‡¶ò‡¶®‡ßç‡¶ü‡¶æ‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶π‡¶¨‡ßá</li>
                <li>‚Ä¢ ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶ö‡¶æ‡¶∞‡ßç‡¶ú ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ‡¶∞ ‡¶â‡¶™‡¶∞ ‡¶®‡¶ø‡¶∞‡ßç‡¶≠‡¶∞ ‡¶ï‡¶∞‡ßá</li>
                <li>‚Ä¢ ‡¶ï‡ßã‡¶® ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶≤‡ßá ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®: <strong>‡ßß‡ß¨‡ß®‡ß™‡ß≠</strong></li>
              </ul>
            </div>
          </div>

          {/* Next Steps */}
          <div className="bg-purple-50 p-4 rounded-lg border border-purple-100">
            <h3 className="font-semibold text-lg mb-4 flex items-center text-purple-800">
              <Gift className="w-5 h-5 mr-2" />
              ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶™‡¶¶‡¶ï‡ßç‡¶∑‡ßá‡¶™
            </h3>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="bg-white p-3 rounded border">
                <h4 className="font-medium text-purple-900 mb-2 flex items-center">
                  <Mail className="w-4 h-4 mr-1" />
                  ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§‡¶ï‡¶∞‡¶£
                </h4>
                <p className="text-sm text-purple-700">
                  ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§‡¶ï‡¶∞‡¶£ ‡¶Æ‡ßá‡¶á‡¶≤ ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡¶ø‡¶§ ‡¶∏‡¶ï‡¶≤ ‡¶§‡¶•‡ßç‡¶Ø ‡¶è‡¶á ‡¶á‡¶Æ‡ßá‡¶á‡¶≤‡ßá ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§
                </p>
              </div>
              
              <div className="bg-white p-3 rounded border">
                <h4 className="font-medium text-purple-900 mb-2 flex items-center">
                  <Truck className="w-4 h-4 mr-1" />
                  ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡¶ø‡¶Ç ‡¶§‡¶•‡ßç‡¶Ø
                </h4>
                <p className="text-sm text-purple-700">
                  ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∂‡¶ø‡¶™ ‡¶π‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶™‡¶∞, ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡¶ø‡¶Ç ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶∏‡¶π ‡¶è‡¶ï‡¶ü‡¶ø ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶™‡¶æ‡¶¨‡ßá‡¶®‡•§ ‡¶Ü‡¶™‡¶®‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ì‡¶Ø‡¶º‡ßá‡¶¨‡¶∏‡¶æ‡¶á‡¶ü ‡¶¨‡¶æ ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßá ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶®‡•§
                </p>
              </div>
              
              <div className="bg-white p-3 rounded border">
                <h4 className="font-medium text-purple-900 mb-2 flex items-center">
                  <Phone className="w-4 h-4 mr-1" />
                  ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§‡¶æ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®?
                </h4>
                <p className="text-sm text-purple-700">
                  ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ï‡ßã‡¶® ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶¨‡¶æ ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§‡¶æ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶® ‡¶π‡¶≤‡ßá, ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ó‡ßç‡¶∞‡¶æ‡¶π‡¶ï ‡¶∏‡ßá‡¶¨‡¶æ ‡¶ü‡¶ø‡¶Æ‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®: <strong>+‡ßÆ‡ßÆ‡ß¶ ‡ßØ‡ß¨‡ßß‡ß® ‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ‡ßØ</strong>
                </p>
              </div>
              
              <div className="bg-white p-3 rounded border">
                <h4 className="font-medium text-purple-900 mb-2 flex items-center">
                  <Clock className="w-4 h-4 mr-1" />
                  ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶™‡¶≤‡¶ø‡¶∏‡¶ø
                </h4>
                <p className="text-sm text-purple-700">
                  ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶£‡ßç‡¶Ø ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡ß≠ ‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶®‡•§ ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡¶£‡ßç‡¶Ø ‡¶Ö‡¶ï‡ßç‡¶∑‡¶§ ‡¶è‡¶¨‡¶Ç ‡¶Æ‡ßÇ‡¶≤ ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú‡¶ø‡¶Ç‡¶Ø‡¶º‡ßá ‡¶•‡¶æ‡¶ï‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§
                </p>
              </div>
            </div>
          </div>

          {/* Action Buttons */}
          <div className="flex flex-col sm:flex-row gap-3">
            <Button asChild className="flex-1" variant="outline">
              <Link to="/">
                <Home className="w-4 h-4 mr-2" />
                ‡¶π‡ßã‡¶Æ‡¶™‡ßá‡¶ú
              </Link>
            </Button>
            <Button asChild className="flex-1" variant="outline">
              <Link to="/user-dashboard/orders">
                <FileText className="w-4 h-4 mr-2" />
                ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®
              </Link>
            </Button>
            <Button asChild className="flex-1 btn-gradient">
              <Link to="/products">
                ‡¶Ü‡¶∞‡ßã ‡¶ï‡ßá‡¶®‡¶æ‡¶ï‡¶æ‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®
              </Link>
            </Button>
          </div>

          {/* Support Information */}
          <div className="text-center text-sm text-gray-500 mt-4">
            <p>‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡¶ø‡¶§ ‡¶ï‡ßã‡¶® ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶¨‡¶æ ‡¶è‡¶∏‡¶è‡¶Æ‡¶è‡¶∏ ‡¶è‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶ú‡¶æ‡¶®‡¶æ‡¶¨‡ßã‡•§</p>
            <p className="mt-1">‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶, <span className="text-indigo-600">ShopBangla</span> ‡¶ü‡¶ø‡¶Æ</p>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
